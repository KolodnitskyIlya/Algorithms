'''
ограничение по времени на тест 2 секунды
ограничение по памяти на тест 256 мегабайт
Дана строка 𝑠, состоящая из 𝑛 строчных латинских букв.

Грубостью строки 𝑡 длины 𝑘 назовем количество пар целых чисел (𝑖,𝑗), где 1≤𝑖<𝑗≤𝑘, для которых 𝑡𝑖= «a» и 𝑡𝑗= «b». Иными
словами, грубость строки — это количество способов вычеркнуть все ее символы, кроме двух, так, чтобы осталась строка
«ab».

Ваша задача — найти подстроку 𝑠𝑙𝑠𝑙+1…𝑠𝑟, грубость которой не превышает 𝑐, максимальной длины.

Входные данные
Первая строка входных данных содержит два целых числа 𝑛 и 𝑐 (1≤𝑛≤106, 0≤𝑐≤1018).

Вторая строка содержит строку 𝑠. Строка состоит из 𝑛 строчных латинских букв.

Выходные данные
Выведите единственное число — максимальную длину подстроки строки, которая имеет грубость не более 𝑐.

Примеры
входные данные
3 1
aab
выходные данные
2
входные данные
6 2
aabcbb
выходные данные
4
'''

n, k = map(int, input().split())
s = input()

cntb = 0
cnta = 0

l = 0
grubost = 0
ans = 0

for r in range(n):
    if s[r] == 'a':
        cnta += 1
    elif s[r] == 'b':
        cntb += 1
        grubost += cnta

    while grubost > k:
        if s[l] == 'a':
            grubost -= cntb
            cnta -= 1
        elif s[l] == 'b':
            cntb -= 1
        l += 1
    ans = max(ans, r - l + 1)
print(ans)

